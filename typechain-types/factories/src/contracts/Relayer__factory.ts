/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Relayer, RelayerInterface } from "../../../src/contracts/Relayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_shieldedVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeMultiplier",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "metaTx",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "MetaTransactionSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "metaTx",
        type: "bytes",
      },
    ],
    name: "calculateRequiredFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayerFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shieldedVault",
    outputs: [
      {
        internalType: "contract IShieldedVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "metaTx",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "submitMetaTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBaseFee",
        type: "uint256",
      },
    ],
    name: "updateBaseFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxFee",
        type: "uint256",
      },
    ],
    name: "updateFeeBounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeeMultiplier",
        type: "uint256",
      },
    ],
    name: "updateFeeMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346101dd57601f61148838819003918201601f19168301916001600160401b038311848410176101e25780849260e0946040528339810103126101dd57610047816101f8565b90610054602082016101f8565b610060604083016101f8565b606083015160808085015160a08087015160c090970151600160009081556001600160a01b03998a1690945295881690529583168152600080516020611448833981519152602052604090205492949290919060ff1615610193575b6001600160a01b0381166000908152600080516020611468833981519152602052604090205460ff1615610127575b5060025560035560045560055560405161121b908161020d82396080518181816101ce015261054a015260a0518181816102a801526106f10152f35b6001600160a01b0316600081815260008051602061146883398151915260205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775906000805160206114288339815191529080a4386100eb565b6001600160a01b038116600081815260008051602061144883398151915260205260408120805460ff191660011790553391906000805160206114288339815191528180a46100bc565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101dd5756fe608080604052600436101561001357600080fd5b600090813560e01c90816301f59d1614610b225750806301ffc9a714610acb578063248a9ca314610a9d57806324ec759014610a7f5780632f2ff15d146109bd57806336568abe1461092a578063456b3d0f14610616578063531632bc14610579578063647846a5146105345780636ef25c3a1461027457806374f244ee146104e557806375b238fc146104bc5780638e690186146103dc57806391d1485414610390578063926d7d7f146103555780639e93ad8e14610338578063a217fddf1461031c578063a9deaa1d146102d7578063bdd7f94d14610292578063c2117d8214610274578063d547741f1461022e578063dd2cc3f31461013e5763e5a70ef71461011e57600080fd5b3461013b578060031936011261013b576020600554604051908152f35b80fd5b503461013b57604036600319011261013b57610158610b3e565b6000805160206111c68339815191528252600160209081526040808420336000908152925290205461018c9060ff16610be0565b6001600160a01b031680156101f5576101f2906040519063a9059cbb60e01b602083015260248201526004356044820152604481526101cc606482610b87565b7f0000000000000000000000000000000000000000000000000000000000000000610ff1565b80f35b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b503461013b57604036600319011261013b576101f260043561024e610b3e565b9061026f61026a82600052600160205260016040600020015490565b610c65565b610f00565b503461013b578060031936011261013b576020600254604051908152f35b503461013b578060031936011261013b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461013b57602036600319011261013b576004359067ffffffffffffffff821161013b57602061031461030e3660048601610b59565b90610c25565b604051908152f35b503461013b578060031936011261013b57602090604051908152f35b503461013b578060031936011261013b5760206040516127108152f35b503461013b578060031936011261013b5760206040517fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc48152f35b503461013b57604036600319011261013b5760406103ac610b3e565b9160043581526001602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461013b57602036600319011261013b576004356000805160206111c6833981519152825260016020526040822060018060a01b03331660005260205261042b60ff60406000205416610be0565b60035481106104805760045481116104435760025580f35b60405162461bcd60e51b815260206004820152601560248201527409ccaee40c4c2e6ca40cccaca40e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e657720626173652066656520746f6f206c6f7760601b6044820152606490fd5b503461013b578060031936011261013b5760206040516000805160206111c68339815191528152f35b503461013b57602036600319011261013b576000805160206111c68339815191528152600160209081526040808320336000908152925290205461052b9060ff16610be0565b60043560055580f35b503461013b578060031936011261013b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461013b57604036600319011261013b57600435602435906000805160206111c6833981519152835260016020526040832060018060a01b0333166000526020526105cc60ff60406000205416610be0565b8181116105dc5760035560045580f35b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642066656520626f756e647360701b6044820152606490fd5b503461013b57604036600319011261013b5760043567ffffffffffffffff811161092657610648903690600401610b59565b6024359160028454146108e157600284557fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4845260016020908152604080862033875290915284205460ff161561089c576003548310610869576004548311610835576106b58282610c25565b83106107fd576106ef6040516323b872dd60e01b6020820152336024820152306044820152846064820152606481526101cc608482610b87565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156107f9578460405180926314473f7160e01b82526040600483015281836020610749604484018a8a610bbf565b8284820391600319830160248701525201925af180156107ee576107b4575b50906107a17f32c9f22bb378c9a3b0e037ab9cdafcee89dbe92eba5393ef108705de903e35029260405192604084526040840191610bbf565b9260208201528033930390a26001815580f35b846107e57f32c9f22bb378c9a3b0e037ab9cdafcee89dbe92eba5393ef108705de903e35029493966107a193610b87565b94919250610768565b6040513d87823e3d90fd5b8480fd5b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a46656520746f6f206c6f7760a81b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420612072656c617965720000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b5080fd5b503461013b57604036600319011261013b57610944610b3e565b336001600160a01b03821603610960576101f290600435610f00565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b503461013b57604036600319011261013b576004356109da610b3e565b906109f661026a82600052600160205260016040600020015490565b8083526001602090815260408085206001600160a01b038516865290915283205460ff1615610a23578280f35b8083526001602081815260408086206001600160a01b0395909516808752949091528420805460ff191690911790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b503461013b578060031936011261013b576020600354604051908152f35b503461013b57602036600319011261013b576020610314600435600052600160205260016040600020015490565b503461013b57602036600319011261013b5760043563ffffffff60e01b811680910361092657602090637965db0b60e01b8114908115610b11575b506040519015158152f35b6301ffc9a760e01b14905082610b06565b9050346109265781600319360112610926576020906004548152f35b602435906001600160a01b0382168203610b5457565b600080fd5b9181601f84011215610b545782359167ffffffffffffffff8311610b545760208381860195010111610b5457565b90601f8019910116810190811067ffffffffffffffff821117610ba957604052565b634e487b7160e01b600052604160045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b15610be757565b60405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b6044820152606490fd5b506002549060055490818102918183041490151715610c4f5761271090048101809111610c4f5790565b634e487b7160e01b600052601160045260246000fd5b600081815260016020908152604080832033845290915290205460ff1615610c8a5750565b3390600090610c99602a610fd5565b92610ca76040519485610b87565b602a8452610cb5602a610fd5565b602085019390601f1901368537845115610ea85760308453845160011015610ea857607860218601536029905b60018211610ebc575050610df857600090610cfd6042610fd5565b90610d0b6040519283610b87565b60428252610d196042610fd5565b602083019390601f1901368537825115610ea85760308453825160011015610ea857607860218401536041905b60018211610e3c575050610df857610df4936037610ddc9383610dcb610da297601196506040519889967f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000602089015251809287890190610f86565b8501917001034b99036b4b9b9b4b733903937b6329607d1b858401525180936048840190610f86565b01010301601f198101835282610b87565b60405162461bcd60e51b815291829160048301610fa9565b0390fd5b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015610e94576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e6b848661110d565b5360041c918015610e80576000190190610d46565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b9091600f81166010811015610e94576f181899199a1a9b1b9c1cb0b131b232b360811b901a610eeb848861110d565b5360041c918015610e80576000190190610ce2565b806000526001602052604060002060018060a01b03831660005260205260ff60406000205416610f2e575050565b60008181526001602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4565b60005b838110610f995750506000910152565b8181015183820152602001610f89565b60409160208252610fc98151809281602086015260208686019101610f86565b601f01601f1916010190565b67ffffffffffffffff8111610ba957601f01601f191660200190565b604080519092611075926001600160a01b03169060009081906110148786610b87565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af13d15611105573d9161105983610fd5565b9261106687519485610b87565b83523d6000602085013e611134565b80519081159182156110e2575b50501561108c5750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b8192509060209181010312610b5457602001518015158103610b54573880611082565b606091611134565b90815181101561111e570160200190565b634e487b7160e01b600052603260045260246000fd5b919290156111965750815115611148575090565b3b156111515790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156111a95750805190602001fd5b60405162461bcd60e51b8152908190610df49060048301610fa956fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212206bcb0d927ea25677ecd5444c0e2e3b9e2773ceffd79f318ee973029bc0ad81bf64736f6c634300081a00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0da6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4950efbde2d46c37e9785f1791697f77e94bb7b701e19f1930a668820722d37694";

type RelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Relayer__factory extends ContractFactory {
  constructor(...args: RelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeToken: AddressLike,
    _shieldedVault: AddressLike,
    _admin: AddressLike,
    _baseFee: BigNumberish,
    _minFee: BigNumberish,
    _maxFee: BigNumberish,
    _feeMultiplier: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeToken,
      _shieldedVault,
      _admin,
      _baseFee,
      _minFee,
      _maxFee,
      _feeMultiplier,
      overrides || {}
    );
  }
  override deploy(
    _feeToken: AddressLike,
    _shieldedVault: AddressLike,
    _admin: AddressLike,
    _baseFee: BigNumberish,
    _minFee: BigNumberish,
    _maxFee: BigNumberish,
    _feeMultiplier: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeToken,
      _shieldedVault,
      _admin,
      _baseFee,
      _minFee,
      _maxFee,
      _feeMultiplier,
      overrides || {}
    ) as Promise<
      Relayer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Relayer__factory {
    return super.connect(runner) as Relayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerInterface {
    return new Interface(_abi) as RelayerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Relayer {
    return new Contract(address, _abi, runner) as unknown as Relayer;
  }
}

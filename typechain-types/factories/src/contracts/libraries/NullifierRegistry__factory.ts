/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NullifierRegistry,
  NullifierRegistryInterface,
} from "../../../../src/contracts/libraries/NullifierRegistry";

const _abi = [
  {
    inputs: [],
    name: "InvalidNullifier",
    type: "error",
  },
  {
    inputs: [],
    name: "NullifierAlreadySpent",
    type: "error",
  },
  {
    inputs: [],
    name: "RegistryFull",
    type: "error",
  },
  {
    inputs: [],
    name: "MAX_NULLIFIERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460175760779081601d823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c63d3677d0314602657600080fd5b6000366003190112603c5780620f424060209252f35b600080fdfea2646970667358221220807039eddc127225daa21a7c068e06e9aa1f26d4165510e2edef80fe28155ef964736f6c634300081a0033";

type NullifierRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NullifierRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NullifierRegistry__factory extends ContractFactory {
  constructor(...args: NullifierRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NullifierRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NullifierRegistry__factory {
    return super.connect(runner) as NullifierRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NullifierRegistryInterface {
    return new Interface(_abi) as NullifierRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NullifierRegistry {
    return new Contract(address, _abi, runner) as unknown as NullifierRegistry;
  }
}
